<?php

/**
 * @file
 * Code for the Site General feature.
 */

include_once 'site_general.features.inc';

/**
 * Implements hook_entity_info_alter().
 */
function site_general_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['square'] = array(
    'label' => t('Square Tile'),
    'custom settings' => FALSE,
  );
  $entity_info['node']['view modes']['line'] = array(
    'label' => t('Line Teaser'),
    'custom settings' => FALSE,
  );
  $entity_info['node']['view modes']['blog_teaser'] = array(
    'label' => t('Blog Teaser'),
    'custom settings' => FALSE,
  );
  $entity_info['node']['view modes']['blog_recent_teaser'] = array(
    'label' => t('Blog Recent Teaser'),
    'custom settings' => FALSE,
  );
}

/**
 * Implements hook_preprocess_node().
 */
function site_general_preprocess_node(&$vars) {
  if ($vars['view_mode'] == 'square') {
    $vars['theme_hook_suggestions'][] = 'node__square';
    $node = $vars['node'];
    $type = $node->type;

    $image_arr = $vars['field_primary_image'][0];
    [$image_alt, $image_title] = site_general_get_alt_title($image_arr, $vars['title']);

    $img_array = [
      '#theme' => 'image_style',
      '#style_name' => 'square_500x500',
      '#path' => $image_arr['uri'],
      '#alt' => $image_alt,
      '#title' => $image_title,
    ];
    $vars['image'] = drupal_render($img_array);
  }

  if ($vars['view_mode'] == 'blog_teaser') {
    $vars['theme_hook_suggestions'][] = 'node__blog_teaser';

    if (!empty($vars['field_primary_image'])) {
      $image_arr = $vars['field_primary_image'][0];
      [$image_alt, $image_title] = site_general_get_alt_title($image_arr, $vars['title']);

      $img_array = [
        '#theme' => 'image_style',
        '#style_name' => 'square_500x500',
        '#path' => $image_arr['uri'],
        '#alt' => $image_alt,
        '#title' => $image_title,
      ];
      $vars['image'] = drupal_render($img_array);
    }
  }

  if ($vars['view_mode'] == 'blog_recent_teaser') {
    $vars['theme_hook_suggestions'][] = 'node__blog_recent_teaser';

    if (!empty($vars['field_primary_image'])) {
      $image_arr = $vars['field_primary_image'][0];
      [$image_alt, $image_title] = site_general_get_alt_title($image_arr, $vars['title']);

      $img_array = [
        '#theme' => 'image_style',
        '#style_name' => 'square_500x500',
        '#path' => $image_arr['uri'],
        '#alt' => $image_alt,
        '#title' => $image_title,
      ];
      $vars['image'] = drupal_render($img_array);
    }

    if (!empty($vars['body'])) {
      if (!empty($vars['body'][0]['summary'])) {
        $text = $vars['body'][0]['summary'];
      }
      else {
        $text = preg_replace('/<p.*><img.*\/><\/p>/', '', $vars['body'][0]['value']);
        $text = substr($text, 0, 300) . '...';
      }
      $vars['text'] = $text;
    }
  }
}

/**
 * Implements hook_library().
 */
function site_general_library() {
  $libraries['colorbox'] = array(
    'title' => 'NTB Colorbox',
    'website' => 'https://github.com/jackmoore/colorbox',
    'version' => '1.6.4',
    'js' => array(
      libraries_get_path('colorbox') . '/jquery.colorbox-min.js' => array(
        'defer' => TRUE,
        'scope' => 'footer',
      ),
    ),
  );
  return $libraries;
}

/**
 * Description to help get alt and title tags.
 *
 * @param array $image
 *   Info about an image.
 * @param string $fallback
 *   Optional alt/title text option.
 *
 * @return array
 *   Two strings of alt and title.
 */
function site_general_get_alt_title(array $image, $fallback = '') {
  $alt = !empty($image['alt']) ? $image['alt'] : !empty($image['field_file_image_alt_text']) ? $image['field_file_image_alt_text'] : !empty($fallback) ? $fallback : 'naked truth beauty';
  $title = !empty($image['title']) ? $image['title'] : !empty($image['field_file_image_alt_text']) ? $image['field_file_image_alt_text'] : !empty($fallback) ? $fallback : 'naked truth beauty';
  return [$alt, $title];
}

/**
 * Implements hook_theme_registry_alter().
 */
function site_general_theme_registry_alter(&$theme_registry) {
  if (!empty($theme_registry['image'])) {
    $theme_registry['image']['preprocess functions'][] = 'site_general_image_preprocess';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function site_general_image_preprocess(array &$variables, string $hook) {
  if (variable_get('ntb_lazy_img', TRUE) && !path_is_admin(current_path())) {
    // Ony lazy loaded image style based files.
    if (valid_url($variables['path'], TRUE) && !empty($variables['style_name'])) {
      $variables['attributes']['data-src'] = $variables['path'];
      $variables['attributes']['data-rand'] = rand();
      $variables['path'] = drupal_get_path('theme', 'ntb') . '/images/loading.svg';
      $variables['attributes']['class'][] = 'lazy-img';
    }
  }

}
