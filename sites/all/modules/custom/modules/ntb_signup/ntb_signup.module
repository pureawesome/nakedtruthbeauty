<?php
/**
 * @file
 * Code for the naked truth beauty signup popup feature.
 */

/**
 * @file
 * NTB Signup.
 */
include_once 'ntb_signup.features.inc';

/**
 * Implements hook_block_info().
 */
function ntb_signup_block_info() {
  $blocks['ntb_signup_block'] = [
    'info' => t('NTB Signup CTA'),
  ];

  $blocks['ntb_signup_popup'] = [
    'info' => t('NTB Signup Popup'),
  ];

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ntb_signup_block_view($delta = '') {
  $block = [];

  switch ($delta) {
    case 'ntb_signup_block':
      $block['content'] = ntb_signup_block_display();
      break;
    case 'ntb_signup_popup':
      $block['content'] = ntb_signup_popup_display();
      break;
  }

  return $block;
}

/**
 * Implements hook_library().
 */
function ntb_signup_library() {
  $libraries['ntb_signup'] = array(
    'title' => 'NTB Signup',
    'version' => '1.2',
    'js' => array(
      drupal_get_path('module', 'ntb_signup') . '/js/ntb_signup.min.js' => array(
        'defer' => TRUE,
        'scope' => 'footer',
      ),
    ),
    'css' => array(
      drupal_get_path('module', 'ntb_signup') . '/css/ntb_signup.min.css' => array(
        'type' => 'file',
        'media' => 'all',
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_menu().
 */
function ntb_signup_menu() {
  $items = array();
  $items['admin/content/signup'] = array(
    'title' => 'Signup Popup',
    'description' => 'Settings for the signup popup',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ntb_signup_admin'),
    'access arguments' => array('administer'),
  );
  $items['signup/ajax/submit'] = array(
    'page callback' => 'ntb_signup_submit_email',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_admin().
 */
function ntb_signup_admin() {
  $form = array();

  $block_text = variable_get('signup_block_text', array('value' => '', 'format' => 'filtered_html'));
  $form['signup']['signup_block_text'] = array(
    '#type' => 'text_format',
    '#title' => t('Block Call to Action'),
    '#default_value' => $block_text['value'],
    '#description' => t("This message is displayed in teh block to trigger the popup."),
    '#format' => $block_text['format'],
    '#required' => TRUE,
  );

  $premessage = variable_get('signup_premessage', array('value' => '', 'format' => 'filtered_html'));
  $form['signup']['signup_premessage'] = array(
    '#type' => 'text_format',
    '#title' => t('Welcome Message'),
    '#default_value' => $premessage['value'],
    '#description' => t("This message is the first step message above the form."),
    '#format' => $premessage['format'],
    '#required' => TRUE,
  );

  $postmessage = variable_get('signup_postmessage', array('value' => '', 'format' => 'filtered_html'));
  $form['signup']['signup_postmessage'] = array(
    '#type' => 'text_format',
    '#title' => t('Approval Message'),
    '#default_value' => $postmessage['value'],
    '#description' => t("This message is the response message after form input."),
    '#format' => $postmessage['format'],
    '#required' => TRUE,
  );

  $alreadymessage = variable_get('signup_alreadymessage', array('value' => '', 'format' => 'filtered_html'));
  $form['signup']['signup_alreadymessage'] = array(
    '#type' => 'text_format',
    '#title' => t('Already Submitted Message'),
    '#default_value' => $alreadymessage['value'],
    '#description' => t("This message is the response message after form input."),
    '#format' => $alreadymessage['format'],
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_rules_event_info().
 */
function ntb_signup_rules_event_info() {
  return array(
    'signup_event' => array(
      'label' => t('Join mail list successfully'),
      'module' => 'ntb_signup',
      'group' => 'NTB Signup' ,
      'variables' => array(
        'email' => array('type' => 'text', 'label' => t('Email used to sign up.')),
      ),
    ),
  );
}

/**
 * Ajax callback for email signup submittal.
 */
function ntb_signup_submit_email() {
  if ($email = $_POST['email']) {
    $signup = db_select('signup_emails', 'se')
      ->fields('se')
      ->condition('email', $email)
      ->execute()
      ->fetchAssoc();

    if ($signup) {
      $response = variable_get('signup_alreadymessage', t('Looks like that email has already been submitted. Please check your email for a copy of the code.'));
    }
    else {
      $signup = db_insert('signup_emails')
        ->fields(array(
          'email' => $email,
          'created' => REQUEST_TIME,
        ))
        ->execute();
      $response = variable_get('signup_postmessage', t('Thanks for signing up! Here is your code.'));
      rules_invoke_event('signup_event', $email);
    }

    drupal_json_output($response['value']);
  }
}

function ntb_signup_block_display() {
  drupal_add_library('ntb_signup', 'ntb_signup');
  $variable = variable_get('signup_block_text', array('value' => '', 'format' => 'filtered_html'));
  return $variable['value'];
}

function ntb_signup_popup_display() {
  drupal_add_library('ntb_signup', 'ntb_signup');
  $pre = variable_get('signup_premessage', t('Sign up and receive a discount code for your first order!'));

  $form = '<div class="ntb-signup">';
    $form .= '<div class="ntb-signup-overlay"></div>';
    $form .= '<div class="ntb-signup-form">';
      $form .= '<div class="close"><i class="fa fa-times" aria-hidden="true"></i></div>';
      $form .= '<div class="ntb-signup-form-wrapper">';
        $form .= '<div class="title">' . $pre['value'] . '</div>';
        $form .= '<div class="errors"></div>';
        $form .= '<div class="input-group">';
          $form .= '<input type="email" title="Please, provide an e-mail" placeholder="Email" class="form-control form-text">';
          $form .= '<span class="input-group-btn"><button class="btn form-submit button" type="submit">Submit</button></span>';
        $form .= '</div>';
      $form .= '</div>';
    $form .= '</div>';
  $form .= '</div>';

  return $form;
}
